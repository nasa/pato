/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.01;


// Geometry properties
// We use 5 blocks, 11 points
r1 5;
h1 0;
r2 5;
h2 5;
r3 0;
h3 5;

alphaDeg 	2.5; // half angle of the wedge in degrees
alpha    	#calc "degToRad($alphaDeg)";
r1s             #calc "$r1*sin($alpha)";
r1sn		#calc "-1.0*$r1s";
r1c             #calc "$r1*cos($alpha)";
r2s             #calc "$r2*sin($alpha)";
r2sn		#calc "-1.0*$r2s";
r2c             #calc "$r2*cos($alpha)";
r3s             #calc "$r3*sin($alpha)";
r3sn		#calc "-1.0*$r3s";
r3c             #calc "$r3*cos($alpha)";


vertices
(
    (0 0 0)              // 0
    ($r1c $h1 $r1s)      // 1
    ($r2c $h2 $r2s)      // 2
    ($r3c $h3 $r3s)      // 3
   
    (0 0 0)              // 4    
    ($r1c $h1 $r1sn)     // 5
    ($r2c $h2 $r2sn)     // 6
    ($r3c $h3 $r3sn)     // 7
);

blocks   
(
    hex (0 5 6 3 0 1 2 3) (40 40 1) simpleGrading (1 1 1)
);


boundary
(
    right
    {
        type patch;
        faces
        (
            (1 2 6 5)
        );
    }
    down
    {
        type symmetryPlane;
        faces
        (
            (0 1 5 0)
        );
    }
    up
    {
        type patch;
        faces
        (
            (3 6 2 3)
        );
    }
    front
    {
        type wedge;
        faces
        (
            (0 5 6 3)
        );
    }
    back
    {
        type wedge;
        faces
        (    
            (0 3 2 1)
        );
    }
    center
    {
        type empty;
        faces
        (
            (0 0 3 3)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
