/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.1                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile {
  version     2.0;
  format      ascii;
  class       dictionary;
  object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(

    (-2   0    -0.1) // 0
    (0    0    -0.1) // 1
    (0.05 0    -0.1) // 2
    (4    0    -0.1) // 3
    (-2   0.6  -0.1) // 4
    (0    0.6  -0.1) // 5
    (0.05 0.6  -0.1) // 6
    (4    0.6  -0.1) // 7
    (-2   1    -0.1) // 8
    (0    1    -0.1) // 9
    (0.05 1    -0.1) // 10
    (4    1    -0.1) // 11

    (-2   0     0.1) // 12
    (0    0     0.1) // 13
    (0.05 0     0.1) // 14
    (4    0     0.1) // 15
    (-2   0.6   0.1) // 16
    (0    0.6   0.1) // 17
    (0.05 0.6   0.1) // 18
    (4    0.6   0.1) // 19
    (-2   1     0.1) // 20
    (0    1     0.1) // 21
    (0.05 1     0.1) // 22
    (4    1     0.1) // 23
);


blocks
(
    // Fluid
    hex (0 1 5 4 12 13 17 16)   fluid (40 20 1) simpleGrading (0.1 0.2 1)
    hex (2 3 7 6 14 15 19 18)   fluid (80 20 1) simpleGrading (10 0.2 1)
    hex (4 5 9 8 16 17 21 20)   fluid (40 20 1) simpleGrading (0.1 2 1)
    hex (5 6 10 9 17 18 22 21)  fluid (5 20 1)  simpleGrading (1 2 1)
    hex (6 7 11 10 18 19 23 22) fluid (80 20 1) simpleGrading (10 2 1)

    // Solid
    hex (1 2 6 5 13 14 18 17) solid (5 20 1) simpleGrading (1 0.2 1)
);

edges
(
);

boundary
(
consoleFixed {
  type wall;
  faces
  (
      (2 14 13 1)
  );
}

topWall {
  type patch;
  faces
  (
      (8 20 21 9)
      (9 21 22 10)
      (10 22 23 11)
  );
}

bottomWall {
  type wall;
  faces
  (
      (0 1 13 12)
      (2 3 15 14)
  );
}

outlet {
  type patch;
  faces
  (
      (3 7 19 15)
      (7 11 23 19)
  );
}

inlet {
  type patch;
  faces
  (
      (0 12 16 4)
      (4 16 20 8)
  );
}

frontAndBack {
  type empty;
  faces
  (
      (0 4 5 1)
      (12 13 17 16)
      (2 6 7 3)
      (14 15 19 18)
      (4 8 9 5)
      (16 17 21 20)
      (5 9 10 6)
      (17 18 22 21)
      (6 10 11 7)
      (18 19 23 22)
      (1 5 6 2)
      (13 14 18 17)
  );
}
);

mergePatchPairs
(
);

// ************************************************************************* //
